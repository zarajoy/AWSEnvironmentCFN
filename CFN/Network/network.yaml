Description: Base VPC Template - 1x VPC, 1x IGW, 12 subnets (3x public subnets, 3x database subnets, 3x application subnets, 3 alternate subnets), route tables and routes.
Parameters:
  VPCCIDR:
    Description: VPC CIDR Range
    Type: String
    Default: 10.0.0.0/16
  SubnetCIDR:
    Description: What should the subnet CIDR be?
    Type: String
    Default: '20'
    AllowedValues:
      - 32
      - 31
      - 30
      - 29
      - 28
      - 27
      - 26
      - 25
      - 24
      - 23
      - 22
      - 21
      - 20
      - 19
      - 18
      - 17
  Environment:
    Description: What type of Environment is this?
    Type: String
    AllowedValues:
      - Dev
      - Test
      - Production
      - QA
    Default: Dev
Mappings:
  SubnetMap:
    CIDR:
      '17': 15
      '18': 14
      '19': 13
      '20': 12
      '21': 11
      '22': 10
      '23': 9
      '24': 8
      '25': 7
      '26': 6
      '27': 5
      '28': 4
      '29': 3
      '30': 2
      '31': 1
      '32': 0
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: CFN-VPC
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CFN-IGW
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: CFN-RT-Public
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
  RouteTablePublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  RouteTableAssociationPublicA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicA
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationPublicB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicB
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationPublicC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicC
      RouteTableId: !Ref RouteTablePublic

  SubnetDatabaseA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-database-A
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetDatabaseB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-database-B
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetDatabaseC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-database-C
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetApplicationA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-application-A
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetApplicationB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Select [ 4, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-application-B
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetApplicationC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      CidrBlock: !Select [ 5, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-application-C
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetPublicA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      CidrBlock: !Select [ 6, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-public-A
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetPublicB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]      
      MapPublicIpOnLaunch: true
      CidrBlock: !Select [ 7, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-public-B
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetPublicC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      CidrBlock: !Select [ 8, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-public-C
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetAlternateA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Select [ 9, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-alternate-A
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetAlternateB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Select [ 10, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-alternate-B
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN
          
  SubnetAlternateC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      CidrBlock: !Select [ 11, !Cidr [ !GetAtt VPC.CidrBlock, 16, Fn::FindInMap: [ SubnetMap, CIDR, !Ref SubnetCIDR ] ]]
      Tags:
        - Key: Name
          Value: subnet-alternate-C
        - Key: Environment
          Value: !Ref Environment
        - Key: CreatedBy
          Value: CFN

Description: Base VPC Template - 1x VPC, 1x IGW, 12 subnets (3x public subnets, 3x
  database subnets, 3x application subnets, 3 alternate subnets), route tables and
  routes.
Parameters:
  Project:
    Description: Give the project a name
    Type: String
    Default: ZaraJoy
  Environment:
    Description: What type of Environment is this?
    Type: String
    AllowedValues:
      - Dev
      - Test
      - Production
      - QA
    Default: Dev
  InstanceType:
    Description: WebServer EC2 instance type.
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
  BucketName:
    Description: BucketName
    Type: String
    Default: zarajoy-s3-4fd4f850
  ObjectPrefix:
    Description: index.html prefix,for ex /
    Type: String
    Default: index.html
  SubnetId:
    Description: Subnet ID which will run the web server instance
    Type: AWS::EC2::Subnet::Id
  LatestAmiId:
    Description: AMI for EC2
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instance.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: '0.0.0.0/0'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Tags
        Parameters:
          - Project
          - Environment
Resources:
  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: KeyPair
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH Access port 22.
      VpcId: vpc-082497b4f260197b3
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref 'SSHLocation'
  EC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType'
      ImageId: !Ref 'LatestAmiId'
      SubnetId: !Ref 'SubnetId'
      KeyName: !Ref 'KeyPair'
      SecurityGroupIds: 
        - !Ref 'WebServerSecurityGroup'
      IamInstanceProfile: !Ref 'IAMInstanceProfile'
      UserData: !Base64
        Fn::Sub: "#!/bin/bash -xe\nyum update -y aws-cfn-bootstrap\nyum install -y\
          \ httpd\nsystemctl start httpd\nsystemctl enable httpd\naws s3 cp s3://${BucketName}${ObjectPrefix}index.html\
          \ /var/www/html/\n"
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'Project'
              - EC2
        - Key: Environment
          Value: !Ref 'Environment'
  IAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref 'IAMRole'
      InstanceProfileName: ec2-access-s3
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ec2-s3-access
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: EC2Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub 'arn:aws:s3:::${BucketName}/index.html'
Outputs:
  WebsiteURL:
    Description: URL for newly apache webserver created.
    Value: !Join
      - ''
      - - http://
        - !GetAtt 'EC2.PublicDnsName'
